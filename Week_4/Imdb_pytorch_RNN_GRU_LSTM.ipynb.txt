{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "Muhammad Aizar Yazid / 1103223097"
      ],
      "metadata": {
        "id": "PTY-QtYX6HEN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Import Libraries and define parameter\n",
        "\n"
      ],
      "metadata": {
        "id": "UWEIoodL6eJ8"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kZdYBfD81NTX"
      },
      "outputs": [],
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "from torch.utils.data import DataLoader, TensorDataset\n",
        "from keras.datasets import imdb\n",
        "from keras.preprocessing.sequence import pad_sequences\n",
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, roc_curve\n",
        "import matplotlib.pyplot as plt\n",
        "from tqdm import tqdm\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hyperparameter"
      ],
      "metadata": {
        "id": "zFzdlO-DG6ot"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "VOCAB_SIZE = 45000\n",
        "MAXLEN = 450\n",
        "EMBEDDING_DIM = 128\n",
        "HIDDEN_DIM = 128\n",
        "BATCH_SIZE = 64\n",
        "EPOCHS = 5"
      ],
      "metadata": {
        "id": "tvDLLi05G3zc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#PYTORCH"
      ],
      "metadata": {
        "id": "fcIOiF7yIwEh"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Preprocessing\n"
      ],
      "metadata": {
        "id": "2dw3757oHlj5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Load dataset\n",
        "(X_train, y_train), (X_test, y_test) = imdb.load_data(num_words=VOCAB_SIZE)\n",
        "X_train = pad_sequences(X_train, maxlen=MAXLEN)\n",
        "X_test = pad_sequences(X_test, maxlen=MAXLEN)\n",
        "\n",
        "# Convert to PyTorch tensors\n",
        "X_train = torch.LongTensor(X_train)\n",
        "X_test = torch.LongTensor(X_test)\n",
        "y_train = torch.FloatTensor(y_train)\n",
        "y_test = torch.FloatTensor(y_test)\n",
        "\n",
        "train_dataset = TensorDataset(X_train, y_train)\n",
        "test_dataset = TensorDataset(X_test, y_test)\n",
        "train_loader = DataLoader(train_dataset, batch_size=BATCH_SIZE, shuffle=True)\n",
        "test_loader = DataLoader(test_dataset, batch_size=BATCH_SIZE)"
      ],
      "metadata": {
        "id": "IShvWa5PHpdf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tqdm import tqdm\n",
        "import numpy as np\n",
        "\n",
        "def train(model, train_loader, optimizer, criterion, device):\n",
        "    model.train()\n",
        "    model.to(device)\n",
        "    running_loss = 0.0\n",
        "    loop = tqdm(train_loader, desc=\"Training\", leave=False)\n",
        "\n",
        "    for X_batch, y_batch in loop:\n",
        "        X_batch, y_batch = X_batch.to(device), y_batch.to(device)\n",
        "\n",
        "        optimizer.zero_grad()\n",
        "        output = model(X_batch).squeeze()\n",
        "        loss = criterion(output, y_batch)\n",
        "        loss.backward()\n",
        "        optimizer.step()\n",
        "\n",
        "        running_loss += loss.item()\n",
        "        loop.set_postfix(loss=loss.item())\n",
        "\n",
        "    return running_loss / len(train_loader)\n",
        "\n",
        "def evaluate(model, test_loader, device):\n",
        "    model.eval()\n",
        "    model.to(device)\n",
        "    y_true, y_pred, y_score = [], [], []\n",
        "    with torch.no_grad():\n",
        "        for X_batch, y_batch in test_loader:\n",
        "            X_batch = X_batch.to(device)\n",
        "            output = model(X_batch).squeeze().cpu()\n",
        "            y_score.extend(torch.sigmoid(output).tolist())\n",
        "            y_pred.extend((torch.sigmoid(output) > 0.5).int().tolist())\n",
        "            y_true.extend(y_batch.tolist())\n",
        "    return y_true, y_pred, y_score\n"
      ],
      "metadata": {
        "id": "u5jvdlVPH2wT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# RNN,GRU,LSTM MODEL\n"
      ],
      "metadata": {
        "id": "Oehiyhz0ITq0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class RNNModel(nn.Module):\n",
        "    def __init__(self):\n",
        "        super().__init__()\n",
        "        self.embedding = nn.Embedding(VOCAB_SIZE, EMBEDDING_DIM)\n",
        "        self.rnn = nn.RNN(EMBEDDING_DIM, HIDDEN_DIM, num_layers=2, batch_first=True)\n",
        "        self.fc = nn.Linear(HIDDEN_DIM, 1)\n",
        "\n",
        "    def forward(self, x):\n",
        "        x = self.embedding(x)\n",
        "        _, h_n = self.rnn(x)\n",
        "        return self.fc(h_n[-1])\n",
        "\n",
        "class LSTMModel(nn.Module):\n",
        "    def __init__(self):\n",
        "        super().__init__()\n",
        "        self.embedding = nn.Embedding(VOCAB_SIZE, EMBEDDING_DIM)\n",
        "        self.lstm = nn.LSTM(EMBEDDING_DIM, HIDDEN_DIM, num_layers=2, batch_first=True)\n",
        "        self.fc = nn.Linear(HIDDEN_DIM, 1)\n",
        "\n",
        "    def forward(self, x):\n",
        "        x = self.embedding(x)\n",
        "        _, (h_n, _) = self.lstm(x)\n",
        "        return self.fc(h_n[-1])\n",
        "\n",
        "class GRUModel(nn.Module):\n",
        "    def __init__(self):\n",
        "        super().__init__()\n",
        "        self.embedding = nn.Embedding(VOCAB_SIZE, EMBEDDING_DIM)\n",
        "        self.gru = nn.GRU(EMBEDDING_DIM, HIDDEN_DIM, num_layers=2, batch_first=True)\n",
        "        self.fc = nn.Linear(HIDDEN_DIM, 1)\n",
        "\n",
        "    def forward(self, x):\n",
        "        x = self.embedding(x)\n",
        "        _, h_n = self.gru(x)\n",
        "        return self.fc(h_n[-1])"
      ],
      "metadata": {
        "id": "yuwq0y-cIJB-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Training, Evaluasi dan Visualisasi"
      ],
      "metadata": {
        "id": "2LPgLhRjKdcH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def run_model(model_class, name, device=\"cuda\" if torch.cuda.is_available() else \"cpu\"):\n",
        "    print(f\"\\n--- Training {name} ---\")\n",
        "    model = model_class()\n",
        "    optimizer = optim.Adam(model.parameters(), lr=0.001)\n",
        "    criterion = nn.BCEWithLogitsLoss()\n",
        "\n",
        "    train_losses = []\n",
        "\n",
        "    for epoch in range(EPOCHS):\n",
        "        print(f\"\\nEpoch {epoch+1}/{EPOCHS}\")\n",
        "        loss = train(model, train_loader, optimizer, criterion, device)\n",
        "        train_losses.append(loss)\n",
        "\n",
        "        y_true, y_pred, y_score = evaluate(model, test_loader, device)\n",
        "        acc = accuracy_score(y_true, y_pred)\n",
        "        prec = precision_score(y_true, y_pred)\n",
        "        rec = recall_score(y_true, y_pred)\n",
        "        f1 = f1_score(y_true, y_pred)\n",
        "        auc = roc_auc_score(y_true, y_score)\n",
        "\n",
        "        print(f\"Loss: {loss:.4f} | Accuracy: {acc:.4f} | Precision: {prec:.4f} | Recall: {rec:.4f} | F1: {f1:.4f} | AUC: {auc:.4f}\")\n",
        "\n",
        "    # ROC Curve\n",
        "    fpr, tpr, _ = roc_curve(y_true, y_score)\n",
        "\n",
        "    return {\n",
        "        \"losses\": train_losses,\n",
        "        \"accuracy\": acc,\n",
        "        \"precision\": prec,\n",
        "        \"recall\": rec,\n",
        "        \"f1\": f1,\n",
        "        \"auc\": auc,\n",
        "        \"fpr\": fpr,\n",
        "        \"tpr\": tpr\n",
        "    }\n"
      ],
      "metadata": {
        "id": "k-Htm0omJ_jN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "results = {}\n",
        "for name, model_class in zip([\"RNN\", \"LSTM\", \"GRU\"], [RNNModel, LSTMModel, GRUModel]):\n",
        "    result = run_model(model_class, name)\n",
        "    results[name] = result"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "30meULX6Ncll",
        "outputId": "77ef9c79-8378-4109-b8b3-71af0b4c743d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "--- Training RNN ---\n",
            "\n",
            "Epoch 1/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.6417 | Accuracy: 0.6855 | Precision: 0.6683 | Recall: 0.7364 | F1: 0.7007 | AUC: 0.7497\n",
            "\n",
            "Epoch 2/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.5679 | Accuracy: 0.6469 | Precision: 0.6249 | Recall: 0.7350 | F1: 0.6755 | AUC: 0.7055\n",
            "\n",
            "Epoch 3/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.5066 | Accuracy: 0.7614 | Precision: 0.8112 | Recall: 0.6814 | F1: 0.7406 | AUC: 0.8335\n",
            "\n",
            "Epoch 4/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.4401 | Accuracy: 0.7687 | Precision: 0.7711 | Recall: 0.7642 | F1: 0.7676 | AUC: 0.8408\n",
            "\n",
            "Epoch 5/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.4049 | Accuracy: 0.7597 | Precision: 0.7619 | Recall: 0.7555 | F1: 0.7587 | AUC: 0.8315\n",
            "\n",
            "--- Training LSTM ---\n",
            "\n",
            "Epoch 1/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.5780 | Accuracy: 0.7328 | Precision: 0.7405 | Recall: 0.7167 | F1: 0.7284 | AUC: 0.8187\n",
            "\n",
            "Epoch 2/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.4499 | Accuracy: 0.8173 | Precision: 0.8125 | Recall: 0.8249 | F1: 0.8187 | AUC: 0.8944\n",
            "\n",
            "Epoch 3/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.3436 | Accuracy: 0.8490 | Precision: 0.8583 | Recall: 0.8359 | F1: 0.8470 | AUC: 0.9191\n",
            "\n",
            "Epoch 4/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.2614 | Accuracy: 0.8612 | Precision: 0.8343 | Recall: 0.9015 | F1: 0.8666 | AUC: 0.9336\n",
            "\n",
            "Epoch 5/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.2169 | Accuracy: 0.8586 | Precision: 0.8962 | Recall: 0.8112 | F1: 0.8516 | AUC: 0.9338\n",
            "\n",
            "--- Training GRU ---\n",
            "\n",
            "Epoch 1/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.5561 | Accuracy: 0.8299 | Precision: 0.8103 | Recall: 0.8616 | F1: 0.8351 | AUC: 0.9096\n",
            "\n",
            "Epoch 2/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.2909 | Accuracy: 0.8780 | Precision: 0.8446 | Recall: 0.9263 | F1: 0.8836 | AUC: 0.9517\n",
            "\n",
            "Epoch 3/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.1826 | Accuracy: 0.8798 | Precision: 0.8377 | Recall: 0.9420 | F1: 0.8868 | AUC: 0.9570\n",
            "\n",
            "Epoch 4/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.1109 | Accuracy: 0.8912 | Precision: 0.8769 | Recall: 0.9102 | F1: 0.8932 | AUC: 0.9570\n",
            "\n",
            "Epoch 5/5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": []
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loss: 0.0560 | Accuracy: 0.8868 | Precision: 0.8773 | Recall: 0.8993 | F1: 0.8882 | AUC: 0.9524\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Loss Plot\n",
        "plt.figure(figsize=(12, 5))\n",
        "for name in results:\n",
        "    plt.plot(results[name][\"losses\"], label=name)\n",
        "plt.title(\"Training Loss\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# ROC Curve\n",
        "plt.figure(figsize=(12, 5))\n",
        "for name in results:\n",
        "    plt.plot(results[name][\"fpr\"], results[name][\"tpr\"], label=f\"{name} (AUC={results[name]['auc']:.2f})\")\n",
        "plt.plot([0, 1], [0, 1], \"k--\")\n",
        "plt.title(\"ROC Curve\")\n",
        "plt.xlabel(\"False Positive Rate\")\n",
        "plt.ylabel(\"True Positive Rate\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 957
        },
        "id": "UKUnEUXDKTQe",
        "outputId": "8e79b1d4-bfb2-4971-8e8c-d22f86a6df21"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Membuat DataFrame dari dictionary results\n",
        "def create_comparison_table(results_dict):\n",
        "    data = []\n",
        "    for name, metrics in results_dict.items():\n",
        "        data.append({\n",
        "            \"Model\": name,\n",
        "            \"Accuracy\": metrics[\"accuracy\"],\n",
        "            \"Precision\": metrics[\"precision\"],\n",
        "            \"Recall\": metrics[\"recall\"],\n",
        "            \"F1-Score\": metrics[\"f1\"],\n",
        "            \"AUC\": metrics[\"auc\"]\n",
        "        })\n",
        "\n",
        "    df = pd.DataFrame(data)\n",
        "    df.set_index(\"Model\", inplace=True)\n",
        "    return df\n",
        "\n",
        "# Menampilkan tabel\n",
        "comparison_df = create_comparison_table(results)\n",
        "print(comparison_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E6QsTeAfOuLv",
        "outputId": "f519aaff-74ee-4234-d853-c837e47c6ca0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       Accuracy  Precision   Recall  F1-Score       AUC\n",
            "Model                                                  \n",
            "RNN     0.75968   0.761859  0.75552  0.758676  0.831542\n",
            "LSTM    0.85860   0.896156  0.81120  0.851564  0.933809\n",
            "GRU     0.88676   0.877312  0.89928  0.888160  0.952362\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Penjelasan Persamaan Matematis Model dan Evaluasi\n",
        "\n",
        "---\n",
        "\n",
        "### 1. Fungsi Aktivasi Sigmoid\n",
        "\\\n",
        "\\begin{align*}\n",
        "\\sigma(x) = \\frac{1}{1 + e^{-x}}\n",
        "\\end{align*}\n",
        "\\\n",
        "Fungsi sigmoid mengubah nilai logit (output dari neuron) menjadi rentang antara 0 dan 1 sehingga cocok untuk prediksi probabilitas pada klasifikasi biner.\n",
        "\n",
        "---\n",
        "\n",
        "### 2. Binary Cross-Entropy Loss\n",
        "\\\n",
        "\\begin{align*}\n",
        "L(y, \\hat{y}) = -\\left[y \\cdot \\log(\\hat{y}) + (1 - y) \\cdot \\log(1 - \\hat{y})\\right]\n",
        "\\end{align*}\n",
        "\\\n",
        "Loss function ini mengukur seberapa jauh prediksi model dari label sebenarnya. Dipakai untuk klasifikasi biner. Pada kode digunakan `BCEWithLogitsLoss` yang menggabungkan sigmoid dan loss ini secara efisien.\n",
        "\n",
        "---\n",
        "\n",
        "### 3. Akurasi\n",
        "\\\n",
        "\\begin{align*}\n",
        "\\text{Accuracy} = \\frac{TP + TN}{TP + TN + FP + FN}\n",
        "\\end{align*}\n",
        "\\\n",
        "Mengukur proporsi prediksi yang benar dari total seluruh prediksi.\n",
        "\n",
        "---\n",
        "\n",
        "### 4. Presisi (Precision)\n",
        "\\\n",
        "\\begin{align*}\n",
        "\\text{Precision} = \\frac{TP}{TP + FP}\n",
        "\\end{align*}\n",
        "\\\n",
        "Presisi menunjukkan seberapa banyak dari prediksi positif yang benar-benar positif.\n",
        "\n",
        "---\n",
        "\n",
        "### 5. Recall\n",
        "\\\n",
        "\\begin{align*}\n",
        "\\text{Recall} = \\frac{TP}{TP + FN}\n",
        "\\end{align*}\n",
        "\\\n",
        "Recall mengukur seberapa banyak data positif yang berhasil diprediksi dengan benar oleh model.\n",
        "\n",
        "---\n",
        "\n",
        "### 6. F1-Score\n",
        "\\\n",
        "\\begin{align*}\n",
        "F1 = 2 \\cdot \\frac{\\text{Precision} \\cdot \\text{Recall}}{\\text{Precision} + \\text{Recall}}\n",
        "\\end{align*}\n",
        "\\\n",
        "F1-score adalah rata-rata harmonik dari precision dan recall. Berguna ketika distribusi kelas tidak seimbang.\n",
        "\n",
        "---\n",
        "\n",
        "### 7. AUC (Area Under Curve)\n",
        "\\\n",
        "\\begin{align*}\n",
        "\\text{AUC} = \\int_0^1 TPR(FPR) \\, dFPR\n",
        "\\end{align*}\n",
        "\\\n",
        "AUC mengukur luas area di bawah kurva ROC. Nilai semakin tinggi menunjukkan model makin baik dalam membedakan kelas.\n",
        "\n",
        "---\n",
        "\n",
        "### 8. LSTM Cell (Long Short-Term Memory)\n",
        "\\\n",
        "\\begin{align*}\n",
        "f_t &= \\sigma(W_f \\cdot [h_{t-1}, x_t] + b_f) \\\\\n",
        "i_t &= \\sigma(W_i \\cdot [h_{t-1}, x_t] + b_i) \\\\\n",
        "o_t &= \\sigma(W_o \\cdot [h_{t-1}, x_t] + b_o) \\\\\n",
        "\\tilde{C}_t &= \\tanh(W_C \\cdot [h_{t-1}, x_t] + b_C) \\\\\n",
        "C_t &= f_t \\cdot C_{t-1} + i_t \\cdot \\tilde{C}_t \\\\\n",
        "h_t &= o_t \\cdot \\tanh(C_t)\n",
        "\\end{align*}\n",
        "\\\n",
        "LSTM menggunakan tiga gate (forget, input, output) dan cell state \\( C_t \\) untuk menangani long-term dependencies.\n",
        "\n",
        "---\n",
        "\n",
        "### 9. GRU Cell (Gated Recurrent Unit)\n",
        "\\\n",
        "\\begin{align*}\n",
        "z_t &= \\sigma(W_z \\cdot [h_{t-1}, x_t]) \\\\\n",
        "r_t &= \\sigma(W_r \\cdot [h_{t-1}, x_t]) \\\\\n",
        "\\tilde{h}_t &= \\tanh(W \\cdot [r_t \\cdot h_{t-1}, x_t]) \\\\\n",
        "h_t &= (1 - z_t) \\cdot h_{t-1} + z_t \\cdot \\tilde{h}_t\n",
        "\\end{align*}\n",
        "\\\n",
        "GRU menyederhanakan LSTM dengan hanya menggunakan dua gate: update gate dan reset gate.\n",
        "\n",
        "---\n",
        "\n",
        "### 10. RNN Cell\n",
        "\\\n",
        "\\begin{align*}\n",
        "h_t = \\tanh(W_{hh} h_{t-1} + W_{xh} x_t + b)\n",
        "\\end{align*}\n",
        "\\\n",
        "RNN standar mengupdate hidden state \\( h_t \\) berdasarkan input saat ini dan hidden state sebelumnya. Namun, RNN rawan terhadap vanishing gradient.\n",
        "\n",
        "---\n",
        "\n"
      ],
      "metadata": {
        "id": "HZbrfMW3WU9l"
      }
    }
  ]
}